The time difference between the two versions is due to the use of system calls when the --systemcalls flag is set. System calls are not regular calls to library functions; all arguments from a system call are packaged and then handed to the kernel. The kernel then executes the program until it completes. The packaging and transfer of control to the kernel requires much more time than a normal library call, which explains why the call takes longer. When the entire program uses system calls for I/O instead of the buffered library calls from stdio.h, then the performance drop becomes noticeable. In the case of this program, using the --systemcalls flag caused the program to take almost five times as long as the normal implementation. So, the use of the so many system calls to implement the algorithm causes a severe drop in performance in this experiment.

Using the firstTest.txt file and the substrings "word", "nikhil", and "aa", the implementation without system calls  yielded a real time of about 0.140s on average. For the implementation with system calls, the average completion time was about 0.670s.

Using the secondTest.txt file and the substrings "nikhil", "shenoy", and "rutgers", the non-system call implementation had an average time of 0.185s. The system call implementation had an average time of 0.850 seconds.
